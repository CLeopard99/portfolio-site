version: 2.1

orbs:
  node: circleci/node@4.7
  sonarcloud: sonarsource/sonarcloud@1.1.0

jobs:
  build:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1- dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm Dependencies
          command: npm ci
      - save_cache:
          key: v1- dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - "build"
      - store_artifacts:
          path: ./build

  test:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1- dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Run Tests
          command: npm test

  eslint:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1- dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Run ESLint
          command: npm run lint

  sonar:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo

      - sonarcloud/scan:
          sonar_token_variable_name: d610a7f392cb75520c7f8f1db2a465207789c9ed


  deploy_to_staging:
    docker:
      - image: cimg/node:16.14
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploy to Surge
          command: npx surge --project ./build --domain https://cleopard-staging.surge.sh

  deploy_to_production:
    docker:
      - image: cimg/node:16.14
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploy to Surge
          command: npx surge --project ./build --domain https://cleopard.surge.sh

workflows:
  ci-pipeline:
    jobs:
      - build          
      - test:
          requires:
            - build
      - eslint:                
          requires:
            - build
      - sonar:
          requires:
            - build
            - test
            - eslint
      - deploy_to_staging:
          requires:
            - test
            - eslint
          filters:
            branches:
              only: main
      - deploy_to_production:
          requires:
            - deploy_to_staging
          filters:
            branches:
              only: main
